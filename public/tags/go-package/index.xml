<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>go package on lrsd</title>
    <link>https://exploreatgh.github.io/tags/go-package/</link>
    <description>Recent content in go package on lrsd</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 16 Oct 2023 21:32:46 +0800</lastBuildDate><atom:link href="https://exploreatgh.github.io/tags/go-package/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Golang 写一个令牌桶限流器</title>
      <link>https://exploreatgh.github.io/posts/2023-10-16-limiter/</link>
      <pubDate>Mon, 16 Oct 2023 21:32:46 +0800</pubDate>
      
      <guid>https://exploreatgh.github.io/posts/2023-10-16-limiter/</guid>
      <description>&lt;p&gt;面试过程中遇到代码实现熔断/限流，虽然经典的限流算法都看过，但真正实现起来还是有些手生，自己敲代码，看看可能存在哪些边界/并发case。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Golang 红黑树 redblacktree</title>
      <link>https://exploreatgh.github.io/posts/2023-10-08-redblacktree/</link>
      <pubDate>Sun, 08 Oct 2023 10:41:26 +0800</pubDate>
      
      <guid>https://exploreatgh.github.io/posts/2023-10-08-redblacktree/</guid>
      <description>&lt;p&gt;红黑树（Red-Black Tree）是一种自平衡的二叉搜索树，它保持了在插入和删除操作时的平衡性，以确保树的高度保持在对数级别，从而保证了基本的查找、插入和删除操作的平均时间复杂度为O(log n)，其中n是树中的节点数量。红黑树在计算机科学中广泛用于实现高效的数据结构和算法，如集合、映射和动态有序集合。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
